// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Div.swift
//
//  Created by Joshua Davis.
//

import Foundation
import Sailboat

// TODO: do this
class TestRenderable: Renderable {
    func addToParent(_ parentNode: Sailboat.Renderable) {
        
    }
    
    func addChild(_ childNode: Sailboat.Renderable) {
        
    }
    
    func render(page: any Element) {
        
    }
    
    func remove() {
        
    }
    
    func replace(with renderable: Sailboat.Renderable) {
        
    }
    
    func update(attributes: [String : String]) {
        
    }
    
    func updateAttribute(name: String, value: String) {
        
    }
    
    func addEvent(name: String, closure value: (Sailboat.EventResult) -> Void) {
        
    }
    
    func onAppear() {
        
    }
    
    func onDisappear() {
        
    }
    
    func onUpdate() {
        
    }
    
    func debugPrint() {
        
    }
    
}

/// Button used to test internal Sailboat
public struct TButton: Element {
    public var id: Sailboat.SailboatID = UUID().uuidString
    
    public var renderer: some Renderable = TestRenderable()
    
    public struct ElementAttributeGroup: AttributeGroup {
        public let name: String
        public let value: String
        
        public init(name: String, value: String) {
            self.name = name
            self.value = value
        }
    }
    
    public var name: String { "button" }
    public var body: some Page {
        InternalError.recursingInPageBody(name: "button")
        return self
    }
    
    public var attributes: [String: String]
    public var events: [String: (EventResult) -> Void]
    public var content: TagContent

    public init() {
        self.init("")
    }

    public init(_ attributes: [String:String] = .init(), @PageBuilder content: @escaping () -> any Fragment) {
        self.content = .list(content)
        self.attributes = attributes
        self.events = [:]
    }
    
    public init(_ text: String) {
        self.content = .text(text)
        self.attributes = .init()
        self.events = [:]
    }

}
