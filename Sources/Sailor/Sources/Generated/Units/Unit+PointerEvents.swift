// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+PointerEvents.swift
//  

extension Unit {
    public struct PointerEvents: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The pointer events are auto.
        public static var `auto`: Self {
            return .init("auto")
        }

        ///The pointer events are none.
        public static var `none`: Self {
            return .init("none")
        }

        ///The pointer events are visible.
        public static var `visible`: Self {
            return .init("visible")
        }

        ///The pointer events are visible fill.
        public static var `visibleFill`: Self {
            return .init("visibleFill")
        }

        ///The pointer events are visible stroke.
        public static var `visibleStroke`: Self {
            return .init("visibleStroke")
        }

        ///The pointer events are visible paint.
        public static var `visiblePainted`: Self {
            return .init("visiblePainted")
        }

        ///The pointer events are all.
        public static var `all`: Self {
            return .init("all")
        }

        ///The pointer events are painted.
        public static var `painted`: Self {
            return .init("painted")
        }

        ///The pointer events are fill.
        public static var `fill`: Self {
            return .init("fill")
        }

        ///The pointer events are stroke.
        public static var `stroke`: Self {
            return .init("stroke")
        }


    }
}
