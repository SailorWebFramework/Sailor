// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+VerticalAlign.swift
//  

extension Unit {
    public struct VerticalAlign: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The element is aligned to the baseline.
        public static var `baseline`: Self {
            return .init("baseline")
        }

        ///The element is aligned to the sub.
        public static var `sub`: Self {
            return .init("sub")
        }

        ///The element is aligned to the super.
        public static var `super`: Self {
            return .init("super")
        }

        ///The element is aligned to the text top.
        public static var `textTop`: Self {
            return .init("text-top")
        }

        ///The element is aligned to the text bottom.
        public static var `textBottom`: Self {
            return .init("text-bottom")
        }

        ///The element is aligned to the top.
        public static var `top`: Self {
            return .init("top")
        }

        ///The element is aligned to the middle.
        public static var `middle`: Self {
            return .init("middle")
        }

        ///The element is aligned to the percentage.
        public static func `percentage`(_ percentage: Unit.Percentage) -> Self {
            return .init("\(percentage)")
        }

        ///The element is aligned to the length.
        public static func `length`(_ length: Unit.Length) -> Self {
            return .init("\(length)")
        }


    }
}
