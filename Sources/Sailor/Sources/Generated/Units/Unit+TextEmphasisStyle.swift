// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+TextEmphasisStyle.swift
//  

extension Unit {
    public struct TextEmphasisStyle: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The text emphasis style is none.
        public static var `none`: Self {
            return .init("none")
        }

        ///The text emphasis style is filled.
        public static var `filled`: Self {
            return .init("filled")
        }

        ///The text emphasis style is open.
        public static var `open`: Self {
            return .init("open")
        }

        ///The text emphasis style is dot.
        public static var `dot`: Self {
            return .init("dot")
        }

        ///The text emphasis style is circle.
        public static var `circle`: Self {
            return .init("circle")
        }

        ///The text emphasis style is double circle.
        public static var `doubleCircle`: Self {
            return .init("double-circle")
        }

        ///The text emphasis style is triangle.
        public static var `triangle`: Self {
            return .init("triangle")
        }

        ///The text emphasis style is sesame.
        public static var `sesame`: Self {
            return .init("sesame")
        }

        ///The text emphasis style is filled sesame.
        public static var `filledSesame`: Self {
            return .init("filled-sesame")
        }

        ///The text emphasis style is open sesame.
        public static var `openSesame`: Self {
            return .init("open-sesame")
        }

        ///The text emphasis style is custom.
        public static func `character`(_ value: Character) -> Self {
            return .init("'\(value)'")
        }


    }
}
