// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+Clear.swift
//  

extension Unit {
    public struct Clear: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The break is applied on the inline start.
        public static var `inlineStart`: Self {
            return .init("inline-start")
        }

        ///The break is applied on the inline end.
        public static var `inlineEnd`: Self {
            return .init("inline-end")
        }

        ///The break is applied on the block start.
        public static var `blockStart`: Self {
            return .init("block-start")
        }

        ///The break is applied on the block end.
        public static var `blockEnd`: Self {
            return .init("block-end")
        }

        ///The break is applied on the left.
        public static var `left`: Self {
            return .init("left")
        }

        ///The break is applied on the right.
        public static var `right`: Self {
            return .init("right")
        }

        ///The break is applied on the top.
        public static var `top`: Self {
            return .init("top")
        }

        ///The break is applied on the bottom.
        public static var `bottom`: Self {
            return .init("bottom")
        }

        ///The break is applied on both inline.
        public static var `bothInline`: Self {
            return .init("both-inline")
        }

        ///The break is applied on both block.
        public static var `bothBlock`: Self {
            return .init("both-block")
        }

        ///The break is applied on both.
        public static var `both`: Self {
            return .init("both")
        }

        ///The break is not applied.
        public static var `none`: Self {
            return .init("none")
        }


    }
}
