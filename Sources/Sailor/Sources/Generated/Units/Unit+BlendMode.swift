// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+BlendMode.swift
//  

extension Unit {
    public struct BlendMode: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The default value.
        public static var `normal`: Self {
            return .init("normal")
        }

        ///Multiplies the colors.
        public static var `multiply`: Self {
            return .init("multiply")
        }

        ///The colors are screened.
        public static var `screen`: Self {
            return .init("screen")
        }

        ///The colors are overlayed.
        public static var `overlay`: Self {
            return .init("overlay")
        }

        ///The colors are darkened.
        public static var `darken`: Self {
            return .init("darken")
        }

        ///The colors are lightened.
        public static var `lighten`: Self {
            return .init("lighten")
        }

        ///The colors are color-dodged.
        public static var `colorDodge`: Self {
            return .init("color-dodge")
        }

        ///The colors are color-burned.
        public static var `colorBurn`: Self {
            return .init("color-burn")
        }

        ///The colors are hard-lighted.
        public static var `hardLight`: Self {
            return .init("hard-light")
        }

        ///The colors are soft-lighted.
        public static var `softLight`: Self {
            return .init("soft-light")
        }

        ///The colors are different.
        public static var `difference`: Self {
            return .init("difference")
        }

        ///The colors are excluded.
        public static var `exclusion`: Self {
            return .init("exclusion")
        }

        ///The colors are hued.
        public static var `hue`: Self {
            return .init("hue")
        }

        ///The colors are saturated.
        public static var `saturation`: Self {
            return .init("saturation")
        }

        ///The colors are colored.
        public static var `color`: Self {
            return .init("color")
        }

        ///The colors are luminous.
        public static var `luminosity`: Self {
            return .init("luminosity")
        }


    }
}
