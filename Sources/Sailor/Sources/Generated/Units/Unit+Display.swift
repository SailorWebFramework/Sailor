// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+Display.swift
//  
//  Created by Joshua Davis on 10/6/23.
//

extension Unit {
    public struct Display: Equatable {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The element is a block.
        public static var `block`: Self {
            return .init("block")
        }

        ///The element is inline.
        public static var `inline`: Self {
            return .init("inline")
        }

        ///The element is a run-in.
        public static var `runIn`: Self {
            return .init("run-in")
        }

        ///The element is a flow.
        public static var `flow`: Self {
            return .init("flow")
        }

        ///The element is a flow root.
        public static var `flowRoot`: Self {
            return .init("flow-root")
        }

        ///The element is a table.
        public static var `table`: Self {
            return .init("table")
        }

        ///The element is a flex.
        public static var `flex`: Self {
            return .init("flex")
        }

        ///The element is a grid.
        public static var `grid`: Self {
            return .init("grid")
        }

        ///The element is a ruby.
        public static var `ruby`: Self {
            return .init("ruby")
        }

        ///The element is a subgrid.
        public static var `subgrid`: Self {
            return .init("subgrid")
        }

        ///The element is a block flow.
        public static var `blockFlow`: Self {
            return .init("block-flow")
        }

        ///The element is an inline table.
        public static var `inlineTable`: Self {
            return .init("inline-table")
        }


    }
}
