// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+TextAlign.swift
//  

extension Unit {
    public struct TextAlign: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The text is aligned to the start.
        public static var `start`: Self {
            return .init("start")
        }

        ///The text is aligned to the end.
        public static var `end`: Self {
            return .init("end")
        }

        ///The text is aligned to the left.
        public static var `left`: Self {
            return .init("left")
        }

        ///The text is aligned to the right.
        public static var `right`: Self {
            return .init("right")
        }

        ///The text is aligned to the center.
        public static var `center`: Self {
            return .init("center")
        }

        ///The text is justified.
        public static var `justify`: Self {
            return .init("justify")
        }

        ///The text is matched to the parent.
        public static var `matchParent`: Self {
            return .init("match-parent")
        }

        ///The text is justified all.
        public static var `justifyAll`: Self {
            return .init("justify-all")
        }


    }
}
