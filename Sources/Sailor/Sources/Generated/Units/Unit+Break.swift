// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+Break.swift
//  
//  Created by Joshua Davis on 10/6/23.
//

extension Unit {
    public struct Break: Equatable {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The browser decides the break behavior.
        public static var `auto`: Self {
            return .init("auto")
        }

        ///The break is avoided.
        public static var `avoid`: Self {
            return .init("avoid")
        }

        ///The break is always applied.
        public static var `always`: Self {
            return .init("always")
        }

        ///The break is applied to all.
        public static var `all`: Self {
            return .init("all")
        }

        ///The break is avoided on a page.
        public static var `avoidPage`: Self {
            return .init("avoid-page")
        }

        ///The break is applied on a page.
        public static var `page`: Self {
            return .init("page")
        }

        ///The break is applied on the left.
        public static var `left`: Self {
            return .init("left")
        }

        ///The break is applied on the right.
        public static var `right`: Self {
            return .init("right")
        }

        ///The break is applied on the recto.
        public static var `recto`: Self {
            return .init("recto")
        }

        ///The break is applied on the verso.
        public static var `verso`: Self {
            return .init("verso")
        }

        ///The break is avoided on a column.
        public static var `avoidColumn`: Self {
            return .init("avoid-column")
        }

        ///The break is applied on a column.
        public static var `column`: Self {
            return .init("column")
        }

        ///The break is avoided on a region.
        public static var `avoidRegion`: Self {
            return .init("avoid-region")
        }

        ///The break is applied on a region.
        public static var `region`: Self {
            return .init("region")
        }


    }
}
