// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+Shape.swift
//  

extension Unit {
    public struct Shape: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///A rectangle shape.
        public static func `rect`(top: Unit.AutoLengthPercentage, right: Unit.AutoLengthPercentage, bottom: Unit.AutoLengthPercentage, left: Unit.AutoLengthPercentage) -> Self {
            return .init("rect(\(top), \(right), \(bottom), \(left))")
        }

        ///A rectangle shape.
        public static func `rect`(top: Unit.AutoLengthPercentage, right: Unit.AutoLengthPercentage, bottom: Unit.AutoLengthPercentage, left: Unit.AutoLengthPercentage, cornerRadius: Unit.AutoLengthPercentage) -> Self {
            return .init("rect(\(top), \(right), \(bottom), \(left) round \(cornerRadius))")
        }

        ///A circle shape.
        public static func `circle`(radius: Unit.AutoLengthPercentage) -> Self {
            return .init("circle(\(radius))")
        }

        ///A circle shape.
        public static func `circle`(radius: Unit.AutoLengthPercentage, position: Unit.Position) -> Self {
            return .init("circle(\(radius) at \(position))")
        }


    }
}
