// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  Unit+JustifyContent.swift
//  

extension Unit {
    public struct JustifyContent: Equatable, CustomStringConvertible {
        var value: String

        public var description: String {
            self.value
        }

        init(_ value: String) {
            self.value = value
        }

        ///The content is justified with space between.
        public static var `spaceBetween`: Self {
            return .init("space-between")
        }

        ///The content is justified with space around.
        public static var `spaceAround`: Self {
            return .init("space-around")
        }

        ///The content is justified with space evenly.
        public static var `spaceEvenly`: Self {
            return .init("space-evenly")
        }

        ///The content is stretched.
        public static var `stretch`: Self {
            return .init("stretch")
        }

        ///The content is justified with a length.
        public static func `with`(_ contentSafety: Unit.ContentSafety, _ contentPosition: Unit.ContentPosition) -> Self {
            return .init("\(contentSafety) \(contentPosition)")
        }

        ///The content is centered.
        public static var `center`: Self {
            return .init("center")
        }

        ///The content is at the start.
        public static var `start`: Self {
            return .init("start")
        }

        ///The content is at the end.
        public static var `end`: Self {
            return .init("end")
        }

        ///The content is at the start.
        public static var `flexStart`: Self {
            return .init("flex-start")
        }

        ///The content is at the end.
        public static var `flexEnd`: Self {
            return .init("flex-end")
        }

        ///The content is at the left.
        public static var `left`: Self {
            return .init("left")
        }

        ///The content is at the right.
        public static var `right`: Self {
            return .init("right")
        }


    }
}
