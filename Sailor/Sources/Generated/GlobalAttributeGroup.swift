// This file was autogenerated by Shipwright. DO NOT CHANGE.
//
//  GlobalAttributeGroup.swift
//  
//  Created by Joshua Davis on 10/6/23.
//

import Sailboat

///Group of all global attributes, which are attributes that can be used with any HTML element.
public protocol GlobalAttributeGroup: AttributeGroup { }

public extension GlobalAttributeGroup {
    
    public static func accesskey(_ value: Character) -> Self {
        .init(name: "accesskey", value: value.description)
    }

    public static func className(_ value: String...) -> Self {
        .init(name: "class", value: value.map{ $0.description }.joined(separator: " "))
    }

    public static func contenteditable(_ value: Bool) -> Self {
        .init(name: "contenteditable", value: value ? "true" : "false")
    }

    public static func data(_ name: String, _ value: String) -> Self {
        .init(name: "data-\(name)", value: value.description)
    }

    public static func dir(_ value: String) -> Self {
        .init(name: "dir", value: value.description)
    }

    public static func draggable(_ value: String) -> Self {
        .init(name: "draggable", value: value.description)
    }

    public static func enterkeyhint(_ value: String) -> Self {
        .init(name: "enterkeyhint", value: value.description)
    }

    public static func hidden(_ value: Bool) -> Self {
        .init(name: "hidden", value: value.description)
    }

    public static func id(_ value: String) -> Self {
        .init(name: "id", value: value.description)
    }

    public static func inert(_ value: Bool) -> Self {
        .init(name: "inert", value: value.description)
    }

    public static func inputmode(_ value: String) -> Self {
        .init(name: "inputmode", value: value.description)
    }

    public static func lang(_ value: String) -> Self {
        .init(name: "lang", value: value.description)
    }

    public static func popover(_ value: Bool) -> Self {
        .init(name: "popover", value: value.description)
    }

    public static func spellcheck(_ value: Bool) -> Self {
        .init(name: "spellcheck", value: value.description)
    }

    public static func style(_ value: Style.Property...) -> Self {
        .init(name: "style", value: Style(value).description)
    }

    public static func tabindex(_ value: Int) -> Self {
        .init(name: "tabindex", value: value.description)
    }

    public static func title(_ value: String) -> Self {
        .init(name: "title", value: value.description)
    }

    public static func translate(_ value: String) -> Self {
        .init(name: "translate", value: value.description)
    }

}
